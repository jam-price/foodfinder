{"version":3,"sources":["images/logo.svg","components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Business","className","this","props","business","imageSrc","src","logo","alt","href","url","name","address","city","state","zipCode","category","rating","reviewCount","phone","React","Component","BusinessList","businesses","map","key","id","SearchBar","term","location","sortBy","handleSortByChange","bind","handleTermChange","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","display_phone","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e3b818bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ba7b8a49.svg\";","import React from 'react';\r\nimport './Business.css';\r\nimport logo from '../../images/logo.svg'\r\n\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    {this.props.business.imageSrc === '' ? \r\n                    <img src={logo} alt='Generic Business' /> \r\n                    : <img src={this.props.business.imageSrc} alt='Business'/>\r\n                    }\r\n                </div>\r\n                <a href={this.props.business.url}>\r\n                <h2>{this.props.business.name}</h2>\r\n                </a>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n                        <p>{this.props.business.reviewCount} reviews</p>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2>Telephone:</h2>\r\n                    <a \r\n                    href={this.props.business.phone === \"\" ? '#' : `tel:${this.props.business.phone}`}>\r\n                        {this.props.business.phone === \"\" ? `No phone number` : this.props.business.phone}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        \r\n        return(\r\n            <div className=\"BusinessList\">\r\n                {\r\n                this.props.businesses.map( business => {\r\n                    return <Business key={business.id} business={business}/>;\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BusinessList","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            term:'',\r\n            location:'',\r\n            sortBy: 'best_match',\r\n        };\r\n\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n        this.handleTermChange = this.handleTermChange.bind(this);        \r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n        this.sortByOptions = {\r\n            'Best Match': 'best_match',\r\n            'Highest Rated': 'rating',\r\n            'Most Reviewed': 'review_count',\r\n        }\r\n    }\r\n\r\n    getSortByClass(sortByOption) {\r\n        if(this.state.sortBy === sortByOption){\r\n            return 'active'\r\n        } else return ''\r\n    }\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy: sortByOption})\r\n    }\r\n\r\n    handleTermChange(event){\r\n        this.setState({term: event.target.value})\r\n    }\r\n\r\n    handleLocationChange(event){\r\n        this.setState({location: event.target.value})\r\n    }\r\n\r\n    handleSearch(event){\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    renderSortByOptions(){\r\n        return Object.keys(this.sortByOptions).map((sortByOption) => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return (\r\n                <li className={this.getSortByClass(sortByOptionValue)}\r\n                    key={sortByOptionValue}\r\n                    onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\r\n                    >\r\n                    {sortByOption}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n                    <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Search</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar","const apiKey = \"UkIepJvq1_PgTpcy-zbiA8QnIshatyDBhT59rRUq3S8T-QqcRo2QqsNHk6JeturidVYzV_Kpx3fwdq9tSfGXqBF8jOU-ADwA_8rqv01UWy9bwSMV_kc8juOXSPVxX3Yx\";\r\n\r\nlet Yelp = {\r\n\r\n    search(term, location, sortBy){\r\n        return fetch(\r\n        `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, \r\n        { headers: {Authorization: `Bearer ${apiKey}`}\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(jsonResponse => {\r\n        if(jsonResponse.businesses) {\r\n            console.log(jsonResponse)\r\n            return jsonResponse.businesses.map(business => {\r\n                return {\r\n                    id: business.id,\r\n                    imageSrc: business.image_url,\r\n                    name: business.name,\r\n                    address: business.location.address1,\r\n                    city: business.location.city,\r\n                    state: business.location.state,\r\n                    zipCode: business.location.zip_code,\r\n                    category: business.categories[0].title,\r\n                    rating: business.rating,\r\n                    reviewCount: business.reviewCount,\r\n                    url: business.url,\r\n                    phone: business.display_phone\r\n                }\r\n            });\r\n        } else console.log('Error')\r\n    })\r\n    }\r\n}\r\n\r\nexport default Yelp","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {businesses: []};\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy){\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({\n        businesses: businesses\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Food-Finder</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}